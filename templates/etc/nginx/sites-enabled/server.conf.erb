<% if ENV['UPSTREAM_SERVERS'] %>
upstream containers {
  <% (ENV['UPSTREAM_SERVERS']).split(',').each do |server| %>
    server <%= server %>;
  <% end %>
}
<% end %>

<% if ENV['ACME_SERVER'] %>
upstream acme {
  server <%= ENV['ACME_SERVER'] %>;
}
<% end %>

server {
  listen 80 <%= 'proxy_protocol' if ENV['PROXY_PROTOCOL'] == 'true' %>;

  include /etc/nginx/partial/server.conf;
  include /etc/nginx/partial/health.conf;

  location / {
  <% if ENV['FORCE_SSL'] == 'true' %>
      return 301 https://$host$request_uri;
  <% else %>
    proxy_set_header X-Forwarded-Proto http;
    include /etc/nginx/partial/location.conf;
  <% end %>
  }
}

server {
  listen 443 ssl <%= 'proxy_protocol' if ENV['PROXY_PROTOCOL'] == 'true' %>;

  <% if ENV['FORCE_SSL'] == 'true' %>
    add_header Strict-Transport-Security "max-age=<%= ENV['HSTS_MAX_AGE'] || 31536000 %>" always;
  <% end %>

  include /etc/nginx/partial/server.conf;
  include /etc/nginx/partial/ssl.conf;
  include /etc/nginx/partial/health.conf;

  location / {
    proxy_set_header X-Forwarded-Proto https;
    include /etc/nginx/partial/location.conf;
  }
}

<% if ENV['HOSTNAME_FILTERING_SERVER_NAME'] %>
  server {
    listen 80 default_server <%= 'proxy_protocol' if ENV['PROXY_PROTOCOL'] == 'true' %>;

    include /etc/nginx/partial/health.conf;
    include /etc/nginx/partial/hostname-filtering.conf;
  }

  server {
    # NOTE: This server leaks the hostname by using the same SSL certificate as
    # the "real" server. That is fine on Enclave because clients are not
    # connecting directly to Nginx. That said, we should perhaps allow passing
    # 2 certificates here: a default, and one for SNI.
    listen 443 ssl default_server <%= 'proxy_protocol' if ENV['PROXY_PROTOCOL'] == 'true' %>;

    include /etc/nginx/partial/ssl.conf;
    include /etc/nginx/partial/health.conf;
    include /etc/nginx/partial/hostname-filtering.conf;
  }
<% end %>

<% if ENV['UPSTREAM_SERVERS'] %>
server {
  listen 9000;

  access_log /proc/self/fd/1 http_log;

  location = / {
    default_type 'text/plain';

    <% if ENV['FORCE_HEALTHCHECK_SUCCESS'] == 'true' %>
    return 200 "";
    <% else %>
    content_by_lua_block {
      local r = ngx.location.capture("/healthcheck");

      if r.status == 502 then
        ngx.status = 502;
      else
      <% if ENV['STRICT_HEALTH_CHECKS'] == 'true' %>
        ngx.status = r.status;
      <% else %>
        ngx.status = 200;
      <% end %>
      end
    }
    <% end %>
  }

  location = /healthcheck {
    internal;

    proxy_method GET;
    proxy_pass_request_headers off;
    proxy_pass_request_body off;
    proxy_set_header User-Agent "Aptible Health Check";
    proxy_set_header X-Aptible-Health-Check 1;

    proxy_pass http://containers;
  }

  location / {
    # Send all requests to /
    rewrite ^.*$ / last;
  }

}
<% end %>
