#!/bin/sh
set -o nounset
set -o errexit
set -o pipefail

mkdir /nginx && cd /nginx

NGINX_VERSION='1.24.0'
NGINX_SHASUM='fec561c95c0320f1860c0d55a8724cd45e5cc238'
NGINX_RESOURCE="nginx-${NGINX_VERSION}"
NGINX_ARCHIVE="${NGINX_RESOURCE}.tar.gz"

NGX_DEVEL_KIT_VERSION="0.3.3"
NGX_DEVEL_KIT_SHASUM="76a1b0f6f95c9a817cb96739e28ae9172bb19df6"
NGX_DEVEL_KIT_RESOURCE="ngx_devel_kit-${NGX_DEVEL_KIT_VERSION}"
NGX_DEVEL_KIT_ARCHIVE="${NGX_DEVEL_KIT_RESOURCE}.tar.gz"

NGX_LUA_VERSION="0.10.26"
NGX_LUA_SHASUM="4e74bcbcf523bbba57de2ca9dbc6c3b0355ffc0d"
NGX_LUA_RESOURCE="lua-nginx-module-${NGX_LUA_VERSION}"
NGX_LUA_ARCHIVE="${NGX_LUA_RESOURCE}.tar.gz"

HEADERS_MORE_VERSION="0.37"
HEADERS_MORE_SHASUM="0711f54f680027ea23eb4d11c87c7274ba55eb3a"
HEADERS_MORE_RESOURCE="headers-more-nginx-module-${HEADERS_MORE_VERSION}"
HEADERS_MORE_ARCHIVE="${HEADERS_MORE_RESOURCE}.tar.gz"

BUILD_DIR="$(mktemp -d)"

cd "$BUILD_DIR"

curl -fsSL "http://nginx.org/download/${NGINX_ARCHIVE}" -o "$NGINX_ARCHIVE"
echo "${NGINX_SHASUM}  ${NGINX_ARCHIVE}" | sha1sum -c -
tar zxf "$NGINX_ARCHIVE"

curl -fsSL "https://github.com/simplresty/ngx_devel_kit/archive/v${NGX_DEVEL_KIT_VERSION}.tar.gz" -o "$NGX_DEVEL_KIT_ARCHIVE"
echo "${NGX_DEVEL_KIT_SHASUM}  ${NGX_DEVEL_KIT_ARCHIVE}" | sha1sum -c -
tar zxf "$NGX_DEVEL_KIT_ARCHIVE"

curl -fsSL "https://github.com/openresty/lua-nginx-module/archive/v${NGX_LUA_VERSION}.tar.gz" -o "$NGX_LUA_ARCHIVE"
echo "${NGX_LUA_SHASUM}  ${NGX_LUA_ARCHIVE}" | sha1sum -c -
tar zxf "$NGX_LUA_ARCHIVE"

curl -fsSL "https://github.com/openresty/headers-more-nginx-module/archive/v${HEADERS_MORE_VERSION}.tar.gz" -o "$HEADERS_MORE_ARCHIVE"
sha1sum "${HEADERS_MORE_ARCHIVE}"
echo "${HEADERS_MORE_SHASUM}  ${HEADERS_MORE_ARCHIVE}" | sha1sum -c -
tar zfx "$HEADERS_MORE_ARCHIVE"

echo "Downloaded:"
ls -l

cd "$NGINX_RESOURCE"

# Cribbing from
# http://git.alpinelinux.org/cgit/aports/tree/main/nginx/APKBUILD
# but adding --with-http_realip_module to support "set_real_ip_from" directive
# and removing some options which we may not need.
apk-install build-base pcre pcre-dev openssl openssl-dev zlib zlib-dev luajit luajit-dev

export LUAJIT_LIB=/usr/lib
export LUAJIT_INC=/usr/include/luajit-2.1

mkdir -p /tmp/nginx

./configure \
  --prefix=/usr \
  --conf-path=/etc/nginx/nginx.conf \
  --pid-path=/var/run/nginx.pid \
  --lock-path=/var/run/nginx.lock \
  --error-log-path=/var/log/nginx/error.log \
  --http-log-path=/var/log/nginx/access.log \
  --http-client-body-temp-path=/tmp/nginx/client-body \
  --http-proxy-temp-path=/tmp/nginx/proxy \
  --http-fastcgi-temp-path=/tmp/nginx/fastcgi \
  --user=nginx \
  --group=nginx \
  --with-pcre-jit \
  --with-http_ssl_module \
  --with-http_gzip_static_module \
  --with-http_realip_module \
  --add-module="../${NGX_DEVEL_KIT_RESOURCE}" \
  --add-module="../${NGX_LUA_RESOURCE}" \
  --add-module="../${HEADERS_MORE_RESOURCE}"

make
make install
apk del build-base openssl-dev pcre-dev zlib-dev

# Create the user and group under which the nginx process will run.
addgroup -S nginx 2>/dev/null || true
adduser -G nginx -H -s /sbin/nologin -D nginx 2>/dev/null || true

# Finally, clean everything up
rm -rf "$BUILD_DIR"
